{
  "permissions": {
    "allow": [
      "Bash(flutter analyze:*)",
      "Bash(dart compile:*)",
      "Bash(echo:*)",
      "Bash(flutter build:*)",
      "Bash(flutter run:*)",
      "Bash(git checkout:*)",
      "WebSearch",
      "Bash(flutter pub:*)",
      "Bash(flutter test:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add comprehensive SQLite database schema\n\n- Created DatabaseHelper with 13 core tables + FTS5 virtual table\n- Implemented enhanced message support with JSON blob storage\n- Added offline message queue tables for mesh networking\n- Included archive system with full-text search capability\n- Added comprehensive test suite (13 tests, all passing)\n- Updated dependencies: sqflite, path_provider, sqflite_common_ffi\n\nDatabase features:\n- Foreign key constraints enabled\n- WAL mode for concurrency\n- Full-text search (FTS5) for archives\n- JSON blob strategy for complex nested objects\n- Migration metadata tracking\n\nTest coverage:\nâœ… Database initialization\nâœ… Schema integrity\nâœ… All tables present\nâœ… Foreign key cascades\nâœ… FTS5 virtual table\nâœ… JSON blob storage\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add optional MigrationService for SharedPreferences â†’ SQLite\n\n- Created comprehensive migration service with checksums\n- Handles contacts, messages, chats, offline queue, device mappings\n- Supports both Message and EnhancedMessage with JSON blobs\n- Includes backup creation and validation\n- Made migration optional via SKIP_MIGRATION flag (useful for dev)\n\nMigration features:\n- Transactional migration (all-or-nothing)\n- Checksum validation for data integrity\n- Automatic backup before migration\n- Detailed statistics and error reporting\n- Supports complex nested objects via JSON serialization\n\nUsage:\n- Production: Automatic migration on first run\n- Development: Set SKIP_MIGRATION=true to start fresh\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Migrate ContactRepository to SQLite\n\n- Replaced SharedPreferences with SQLite for contact storage\n- Implemented comprehensive test suite (13 tests, 12 passing, 1 skipped)\n- Kept same interface - zero breaking changes for dependent code\n- Improved performance from O(n) to O(log n) for lookups\n- Backup of old implementation saved as contact_repository_OLD_SHAREDPREFS.dart\n\nKey improvements:\n- Efficient indexed queries via SQLite\n- Proper foreign key relationships\n- Security level validation unchanged\n- FlutterSecureStorage still used for shared secrets (correct approach)\n\nTest coverage:\nâœ… Save and retrieve contacts\nâœ… Update contact preserving security\nâœ… Get all contacts\nâœ… Mark as verified\nâœ… Security upgrade path validation  \nâœ… Security reset functionality\nâœ… Get contact name\nâœ… Security level management\nâœ… Timestamps and metadata\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(flutter clean:*)",
      "Bash(find:*)"
    ],
    "deny": [],
    "ask": []
  }
}